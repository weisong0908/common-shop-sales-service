// <auto-generated />
using System;
using CommonShop.SalesService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CommonShop.SalesService.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    [Migration("20210117073200_RemoveQuantityFromProducts")]
    partial class RemoveQuantityFromProducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CommonShop.SalesService.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Line1")
                        .HasColumnType("text");

                    b.Property<string>("Line2")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("108e7c96-ea21-44f2-9cbe-db4237c2d1dd"),
                            CustomerId = new Guid("6865a7fa-6866-4516-9002-53cc8386991e"),
                            Line1 = "Block 0 Street 0",
                            Line2 = "#10-0",
                            PostalCode = "123456"
                        },
                        new
                        {
                            Id = new Guid("41881c20-df28-43df-8e1c-e42748181ea3"),
                            CustomerId = new Guid("f5f1e765-a3bb-44bb-89b9-52ab8eab9db4"),
                            Line1 = "Block 1 Street 2",
                            Line2 = "#9-1",
                            PostalCode = "123456"
                        },
                        new
                        {
                            Id = new Guid("5df7c00b-3cfd-48e7-a674-6aee0f120313"),
                            CustomerId = new Guid("3a538afc-1441-4c96-bf86-81a18ad0ca04"),
                            Line1 = "Block 2 Street 4",
                            Line2 = "#8-4",
                            PostalCode = "123456"
                        },
                        new
                        {
                            Id = new Guid("c9871377-210e-4979-a006-a8e156b05147"),
                            CustomerId = new Guid("97bdd552-ae59-403a-ba6c-3162d17560ec"),
                            Line1 = "Block 3 Street 6",
                            Line2 = "#7-9",
                            PostalCode = "123456"
                        });
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6865a7fa-6866-4516-9002-53cc8386991e"),
                            Email = "weisong0908@gmail.com",
                            Name = "John 0",
                            Phone = "98765432"
                        },
                        new
                        {
                            Id = new Guid("f5f1e765-a3bb-44bb-89b9-52ab8eab9db4"),
                            Email = "weisong0908@gmail.com",
                            Name = "John 1",
                            Phone = "98765432"
                        },
                        new
                        {
                            Id = new Guid("3a538afc-1441-4c96-bf86-81a18ad0ca04"),
                            Email = "weisong0908@gmail.com",
                            Name = "John 2",
                            Phone = "98765432"
                        },
                        new
                        {
                            Id = new Guid("97bdd552-ae59-403a-ba6c-3162d17560ec"),
                            Email = "weisong0908@gmail.com",
                            Name = "John 3",
                            Phone = "98765432"
                        });
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Fee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Fees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("132898f9-ef64-474b-884c-d0b7801e9269"),
                            Cost = 2m,
                            OrderId = new Guid("e148921a-f292-4078-8004-120a392836ab"),
                            Title = "Shipping fee"
                        },
                        new
                        {
                            Id = new Guid("48173c46-4ad1-4f94-8241-2c2aadd9cd49"),
                            Cost = 2m,
                            OrderId = new Guid("e0c33624-316f-454e-9952-c4b88f6f4318"),
                            Title = "Shipping fee"
                        },
                        new
                        {
                            Id = new Guid("d7b7454d-0593-48de-aab2-d20a00b3db96"),
                            Cost = 2m,
                            OrderId = new Guid("cf8df904-dc82-4f7f-8cf8-84dd03fee8bd"),
                            Title = "Shipping fee"
                        },
                        new
                        {
                            Id = new Guid("02238e28-1b03-48db-94b9-c0b335ae6d7a"),
                            Cost = 2m,
                            OrderId = new Guid("06706a27-4213-4d6c-a3c6-8789462b2f5c"),
                            Title = "Shipping fee"
                        });
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e148921a-f292-4078-8004-120a392836ab"),
                            CustomerId = new Guid("6865a7fa-6866-4516-9002-53cc8386991e"),
                            Date = new DateTime(2021, 1, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderStatus = 0,
                            TotalPrice = 22m
                        },
                        new
                        {
                            Id = new Guid("e0c33624-316f-454e-9952-c4b88f6f4318"),
                            CustomerId = new Guid("f5f1e765-a3bb-44bb-89b9-52ab8eab9db4"),
                            Date = new DateTime(2021, 1, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderStatus = 0,
                            TotalPrice = 42m
                        },
                        new
                        {
                            Id = new Guid("cf8df904-dc82-4f7f-8cf8-84dd03fee8bd"),
                            CustomerId = new Guid("3a538afc-1441-4c96-bf86-81a18ad0ca04"),
                            Date = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderStatus = 0,
                            TotalPrice = 62m
                        },
                        new
                        {
                            Id = new Guid("06706a27-4213-4d6c-a3c6-8789462b2f5c"),
                            CustomerId = new Guid("97bdd552-ae59-403a-ba6c-3162d17560ec"),
                            Date = new DateTime(2021, 1, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            OrderStatus = 0,
                            TotalPrice = 82m
                        });
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.OrderProduct", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("e148921a-f292-4078-8004-120a392836ab"),
                            ProductId = new Guid("de039434-d200-43b9-8191-79869c895821"),
                            Amount = 20m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = new Guid("e0c33624-316f-454e-9952-c4b88f6f4318"),
                            ProductId = new Guid("d6a76809-7088-465d-bfe8-4d95c4f38c40"),
                            Amount = 40m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = new Guid("cf8df904-dc82-4f7f-8cf8-84dd03fee8bd"),
                            ProductId = new Guid("387ba502-67ff-4cc5-ab50-15d436a4b455"),
                            Amount = 60m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = new Guid("06706a27-4213-4d6c-a3c6-8789462b2f5c"),
                            ProductId = new Guid("a14ac91b-1ad1-40c4-8092-d08109e5ca78"),
                            Amount = 80m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("StockLevel")
                        .HasColumnType("integer");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de039434-d200-43b9-8191-79869c895821"),
                            Category = "Category 1",
                            Description = "Some description",
                            Price = 10m,
                            StockLevel = 1,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 1"
                        },
                        new
                        {
                            Id = new Guid("d6a76809-7088-465d-bfe8-4d95c4f38c40"),
                            Category = "Category 2",
                            Description = "Some description",
                            Price = 20m,
                            StockLevel = 2,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 2"
                        },
                        new
                        {
                            Id = new Guid("387ba502-67ff-4cc5-ab50-15d436a4b455"),
                            Category = "Category 1",
                            Description = "Some description",
                            Price = 30m,
                            StockLevel = 3,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 3"
                        },
                        new
                        {
                            Id = new Guid("a14ac91b-1ad1-40c4-8092-d08109e5ca78"),
                            Category = "Category 2",
                            Description = "Some description",
                            Price = 40m,
                            StockLevel = 4,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 4"
                        },
                        new
                        {
                            Id = new Guid("c0cd14c3-c55c-4b94-a4bd-7298e7eff811"),
                            Category = "Category 1",
                            Description = "Some description",
                            Price = 50m,
                            StockLevel = 5,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 5"
                        },
                        new
                        {
                            Id = new Guid("e10fcad7-a24f-416f-a43e-0fc1fce71727"),
                            Category = "Category 2",
                            Description = "Some description",
                            Price = 60m,
                            StockLevel = 6,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 6"
                        },
                        new
                        {
                            Id = new Guid("3c72192c-578f-4e37-9061-029f70f94b8b"),
                            Category = "Category 1",
                            Description = "Some description",
                            Price = 70m,
                            StockLevel = 7,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 7"
                        },
                        new
                        {
                            Id = new Guid("5114e1c1-0ad1-44bc-88cb-cbe70ee07c3e"),
                            Category = "Category 2",
                            Description = "Some description",
                            Price = 80m,
                            StockLevel = 8,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 8"
                        },
                        new
                        {
                            Id = new Guid("b6890fea-68a6-4188-aec2-9e99c71f0c9a"),
                            Category = "Category 1",
                            Description = "Some description",
                            Price = 90m,
                            StockLevel = 9,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 9"
                        },
                        new
                        {
                            Id = new Guid("48347309-5131-4cbc-aed7-9a64b40059c4"),
                            Category = "Category 2",
                            Description = "Some description",
                            Price = 100m,
                            StockLevel = 10,
                            ThumbnailUrl = "https://bulma.io/images/placeholders/640x480.png",
                            Title = "Product 10"
                        });
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Address", b =>
                {
                    b.HasOne("CommonShop.SalesService.Models.Customer", "Customer")
                        .WithOne("PrimaryAddress")
                        .HasForeignKey("CommonShop.SalesService.Models.Address", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Fee", b =>
                {
                    b.HasOne("CommonShop.SalesService.Models.Order", "Order")
                        .WithMany("Fees")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Order", b =>
                {
                    b.HasOne("CommonShop.SalesService.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.OrderProduct", b =>
                {
                    b.HasOne("CommonShop.SalesService.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommonShop.SalesService.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PrimaryAddress");
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Order", b =>
                {
                    b.Navigation("Fees");

                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("CommonShop.SalesService.Models.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
